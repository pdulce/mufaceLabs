server:
  port: 8086

mail:
  password:
    encoded: ewzqlzdstujochya

spring:
  # command domain
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.1.128:3306/sampleCommandDB
    username: pedro
    password: passwd
  # query domain
  redis:
    host: 127.0.0.1
    password: samplepwd
    port: 6379
  # event domain
  data:
    mongodb:
      host: 192.168.1.128
      port: 27017
      uri: mongodb://sampleuser:samplepwd@192.168.1.128:27017/queryStore
      #database: eventDbStore
      #username: sampleuser
      #password: samplepwd
      authentication-database: admin  # Si estamos usando autenticaci√≥n
    sql:
      init:
        mode: always
    jpa:
      hibernate:
        ddl-auto: update
        show-sql: true
      properties:
        hibernate:
          format_sql: true
# Axon configuration
axon:
  eventhandling:
    processors:
      myProcessor:
        mode: tracking  # O 'subscribing' dependiendo de tus necesidades
        source: default
  eventstore:
    mongo:
      uri: mongodb://sampleuser:samplepwd@192.168.1.128:27017/eventDbStore
      database: eventDbStore
      username: sampleuser
      password: samplepwd
      storage-engine: wiredTiger # Puedes usar 'default' o 'wiredTiger' for XFS filesystem
      events-collection: domainevents
      snapshots-collection: snapshots
  snapshot:
    mongo:
      uri: mongodb://sampleuser:samplepwd@192.168.1.128:27017/eventDbStore
      database: eventDbStore
      username: sampleuser
      password: samplepwd
      snapshots-collection: snapshots
  tokenstore:
    mongo:
      uri: mongodb://sampleuser:samplepwd@192.168.1.128:27017/eventDbStore
      database: eventDbStore
      username: sampleuser
      password: samplepwd
      tokens-collection: trackingtokens
  axonserver:
    enabled: false

# Event bus configuration
  kafka:
    topic: myTopic
    consumer:
      #bootstrap-servers: 192.168.1.128:9092
      bootstrap-servers: 127.0.0.1:9092
      group-id: my-group
      auto-offset-reset: earliest
      properties:
        spring:
          json:
            trusted:
              packages: '*'
      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

